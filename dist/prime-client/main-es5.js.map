{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/model/prime-request.ts","webpack:///src/app/primechecker.service.ts","webpack:///src/app/primechecker/primechecker.component.ts","webpack:///src/app/primechecker/primechecker.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HeaderComponent","PrimeRequest","possiblePrime","PrimecheckerService","http","request","post","pipe","handleError","error","errorMessage","ErrorEvent","message","status","console","log","alert","providedIn","PrimecheckerComponent","route","router","primecheckerService","responseMessage","submitted","inputNumber","required","min","pattern","valueChanges","subscribe","newValue","invalid","value","executePrimeCheckerService","res","prime","nextPrime","sendNumber","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {PrimecheckerComponent} from \"./primechecker/primechecker.component\";\n\n\nconst routes: Routes = [\n  {path: '', component: PrimecheckerComponent},\n  {path: 'prime-checker', component: PrimecheckerComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'prime-client';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PrimecheckerComponent } from './primechecker/primechecker.component';\nimport { HeaderComponent } from './header/header.component';\nimport {PrimecheckerService} from \"./primechecker.service\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PrimecheckerComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    PrimecheckerService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n  <nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n    <div class=\"navbar-brand\">Albert FÃ³nyad</div>\n    <ul class=\"navbar-nav\">\n      <li><a class=\"nav-link\" href=\"/\">Prime checker</a></li>\n    </ul>\n  </nav>\n</header>\n","export class PrimeRequest {\n  possiblePrime: number;\n\n  constructor(possiblePrime: number) {\n    this.possiblePrime = possiblePrime;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { PrimeResponse} from \"./model/prime-response\";\nimport {PrimeRequest} from \"./model/prime-request\";\nimport {catchError, retry} from \"rxjs/operators\";\nimport {throwError} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrimecheckerService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  executePrimeCheckerService(possiblePrime: number) {\n    const request = new PrimeRequest(possiblePrime);\n\n    return this.http.post<PrimeResponse>('http://localhost:8080/prime', request).pipe(\n      retry(1),\n      catchError(this.handleError)\n    );\n  }\n\n  handleError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      errorMessage = `Error: ${error.error.message}`;\n    }\n    else if (error.status == 400) {\n      // server side validation error\n      errorMessage = `${error.error.possiblePrime}`;\n    } else {\n      // server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    alert(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PrimecheckerService } from \"../primechecker.service\";\nimport {FormControl, Validators} from \"@angular/forms\";\nimport {PrimeResponse} from \"../model/prime-response\";\n\n@Component({\n  selector: 'app-primechecker',\n  templateUrl: './primechecker.component.html',\n  styleUrls: ['./primechecker.component.css']\n})\nexport class PrimecheckerComponent implements OnInit {\n\n  responseMessage: PrimeResponse =  null;\n  submitted = false;\n  inputNumber = new FormControl('', [Validators.required, Validators.min(2), Validators.pattern('[0-9]*')]);\n\n  constructor(private route: ActivatedRoute,\n              private router: Router, private primecheckerService: PrimecheckerService) { }\n\n  ngOnInit(): void {\n    this.inputNumber.valueChanges.subscribe(newValue => {\n      this.responseMessage = null;\n    });\n  }\n\n  sendNumber() {\n    if (this.inputNumber.invalid) {\n      this.submitted = true;\n      return;\n    }\n\n    console.log(\"given number to send: \" + this.inputNumber.value);\n    this.primecheckerService.executePrimeCheckerService(this.inputNumber.value).subscribe((res) => {\n      console.log(\"Response, prime: \" + res.prime + \" nextPrime: \" + res.nextPrime)\n      this.responseMessage = res;\n      this.submitted = false;\n    });\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"form-group\">\n    <label for=\"numberToCheck\">Number to check:</label>\n    <input type=\"text\" class=\"form-control\" id=\"numberToCheck\" required [formControl]=\"inputNumber\" [ngClass]=\"{ 'is-invalid': submitted && inputNumber.errors }\">\n    <div *ngIf=\"submitted && inputNumber.errors\" class=\"text-danger\">Number value which greater than 1 must be given!</div>\n  </div>\n  <div>\n    <button (click)=\"sendNumber()\">Check</button>\n  </div>\n  <div *ngIf=\"responseMessage != null\" [ngClass]=\"{'alert-success':responseMessage.prime, 'alert-danger':!responseMessage.prime }\" class=\"text-break\">\n     The given number: {{this.inputNumber.value}} {{responseMessage.prime ? 'is' : 'is not' }} prime number. The following prime number is {{responseMessage.nextPrime}}\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}